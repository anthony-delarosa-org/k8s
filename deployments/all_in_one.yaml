# =============================================================================
# NAMESPACES
# =============================================================================

---
apiVersion: v1
kind: Namespace
metadata:
  name: frontend
  labels:
    name: frontend
    tier: frontend

---
apiVersion: v1
kind: Namespace
metadata:
  name: backend
  labels:
    name: backend
    tier: backend

---
apiVersion: v1
kind: Namespace
metadata:
  name: database
  labels:
    name: database
    tier: database

---
apiVersion: v1
kind: Namespace
metadata:
  name: test
  labels:
    name: test
    tier: test

# =============================================================================
# FRONTEND TIER
# =============================================================================

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: frontend
  labels:
    app: web-app
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-app
      tier: frontend
  template:
    metadata:
      labels:
        app: web-app
        tier: frontend
    spec:
      containers:
      - name: web
        image: nginx:alpine
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_API_URL
          value: "http://api-service.backend.svc.cluster.local:8080"

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: frontend
spec:
  selector:
    app: web-app
    tier: frontend
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer

# =============================================================================
# BACKEND TIER
# =============================================================================

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app
  namespace: backend
  labels:
    app: api-app
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-app
      tier: backend
  template:
    metadata:
      labels:
        app: api-app
        tier: backend
    spec:
      containers:
      - name: api
        image: httpd:alpine
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          value: "postgresql://db-service.database.svc.cluster.local:5432/myapp"
        command: ["/bin/sh"]
        args: ["-c", "sed -i 's/Listen 80/Listen 8080/' /usr/local/apache2/conf/httpd.conf && httpd-foreground"]

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: backend
spec:
  selector:
    app: api-app
    tier: backend
  ports:
  - port: 8080
    targetPort: 8080

# =============================================================================
# DATABASE TIER
# =============================================================================

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-app
  namespace: database
  labels:
    app: db-app
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
      tier: database
  template:
    metadata:
      labels:
        app: db-app
        tier: database
    spec:
      containers:
      - name: database
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "myapp"
        - name: POSTGRES_USER
          value: "appuser"
        - name: POSTGRES_PASSWORD
          value: "password123"

---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: database
spec:
  selector:
    app: db-app
    tier: database
  ports:
  - port: 5432
    targetPort: 5432

# =============================================================================
# TEST POD
# =============================================================================

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: test
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
